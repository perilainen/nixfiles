# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{ config, lib, pkgs, modulesPath, ... }:

{
  imports = [ ];

  boot.initrd.availableKernelModules = [ "xhci_pci" "nvme" "sr_mod" ];
  boot.initrd.kernelModules = [ ];
  boot.kernelModules = [ ];
  boot.extraModulePackages = [ ];

  fileSystems."/" =
    { device = "/dev/disk/by-uuid/931a2fd9-ad5c-4055-ac9b-c770a3d56d32";
      fsType = "ext4";
    };

  fileSystems."/boot" =
    { device = "/dev/disk/by-uuid/FEA1-CEBB";
      fsType = "vfat";
      options = [ "fmask=0077" "dmask=0077" ];
    };
system.fsPackages = [pkgs.open-vm-tools];
#fileSystems."/mnt/perjohansson" = {
#  device = ".host:/perjohansson";
#  fsType = "fuse./run/current-system-sw/bin-vmhgfs-fuse";
#  options = ["umast=22" "uid=1000" "gid=100" "allow_other" "defaults" "auto_unmount"];
#};

  swapDevices = [ ];

  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
  # (the default) this is the recommended approach. When using systemd-networkd it's
  # still possible to use this option, but it's recommended to use it in conjunction
  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
  networking.useDHCP = lib.mkDefault true;
  # networking.interfaces.ens160.useDHCP = lib.mkDefault true;

  nixpkgs.hostPlatform = lib.mkDefault "aarch64-linux";
}
